server {
    listen [::]:80;
    listen 80;

    server_name api.rororo-marshmallow.store;

    location ^~ /.well-known/acme-challenge {
        allow all; 
        root /var/www/certbot;
    }

    # location / {
    #     return 301 https://api.rororo-marshmallow.store$request_uri;
    # }
     
    server_tokens off;
}



# events {
#     worker_connections 1024;
# }

# http {
#     include /etc/nginx/mime.types;

#    upstream express {
#         server express:8080;
# }

#     server {
#         listen 80;
#         server_name api.rororo-marshmallow.store;
#         server_tokens off;

#         location /.well-known/acme-challenge/ {
#                 root /var/www/certbot;
#         } 

#         location / {
#             return 301 https://$host$request_uri;
#         } 
# }

#     server {
#         listen 443 ssl;
#         server_name api.rororo-marshmallow.store;    
#         server_tokens off;
        
#             ssl_certificate /etc/letsencrypt/live/api.rororo-marshmallow.store/fullchain.pem;
#             ssl_certificate_key /etc/letsencrypt/live/api.rororo-marshmallow.store/privkey.pem;
#             include /etc/letsencrypt/options-ssl-nginx.conf;
#             ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        
#         location / {
#             proxy_pass http://express;
#             proxy_http_version 1.1;        
#             proxy_set_header Connection "";  
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header Host $host;
#         }

#     }
# }



# events {
#     worker_connections 1024;
# }

# http {
#     include /etc/nginx/mime.types;

#    upstream express {
#         server express:${API_PORT};
#     }


#     server {
#         listen 80;
#         server_name ${SERVER_DOMAIN};
#         server_tokens off;

#         location /.well-known/acme-challenge/ {
#                 root /var/www/certbot;
#         } 

#         location / {
#             return 301 https://${NGINX_HOST_REQUEST_URI};
#         } 
#     }

#     server {
#         listen 443 ssl;
#         server_name ${SERVER_DOMAIN};    
#         server_tokens off;
        
#             ssl_certificate /etc/letsencrypt/live/${SERVER_DOMAIN}/fullchain.pem;
#             ssl_certificate_key /etc/letsencrypt/live/${SERVER_DOMAIN}/privkey.pem;
#             include /etc/letsencrypt/options-ssl-nginx.conf;
#             ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        
#         location / {
#             proxy_pass http://express;
#             proxy_http_version 1.1;        
#             proxy_set_header Connection "";  
#             proxy_set_header X-Forwarded-For ${PROXY_ADD_X_FORWARDED_FOR};
#             proxy_set_header Host ${HOST};
#         }

#     }
# }
