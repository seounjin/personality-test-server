name: Deploy to EC2

on:
  push:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Root Env File
        working-directory: ./
        run: |
          touch .env
          echo PROD_SERVICE_PORT=${{ secrets.PROD_SERVICE_PORT }} >> .env
          echo API_HOST=${{ secrets.API_HOST }} >> .env
          echo API_PORT=${{ secrets.API_PORT }} >> .env
          echo SERVER_DOMAIN=${{ secrets.SERVER_DOMAIN }} >> .env
          echo SSL_EMAIL=${{ secrets.SSL_EMAIL }} >> .env
          echo "NGINX_HOST_REQUEST_URI=\$host\$request_uri" >> .env
          echo "HOST=\$host" >> .env
          echo "PROXY_ADD_X_FORWARDED_FOR=\$proxy_add_x_forwarded_for" >> .env
          echo "HTTP_COOKIE=\$http_cookie" >> .env
          echo "HTTP_ORIGIN=\$http_origin" >> .env
          echo "REQUEST_METHOD=\$request_method" >> .env 

      - name: Create Server Env File
        working-directory: ./server
        run: |
          touch .env
          echo DEV_PORT=${{ secrets.DEV_PORT }} >> .env
          echo PROD_PORT=${{ secrets.PROD_PORT }} >> .env
          echo LOCAL_CORS_ORIGIN=${{ secrets.LOCAL_CORS_ORIGIN }} >> .env
          echo PROD_CORS_ORIGIN=${{ secrets.PROD_CORS_ORIGIN }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
          echo JWT_ACCESS_TOKEN_SECRET_KEY=${{ secrets.JWT_ACCESS_TOKEN_SECRET_KEY }} >> .env
          echo JWT_REFRESH_TOKEN_SECRET_KEY=${{ secrets.JWT_REFRESH_TOKEN_SECRET_KEY }} >> .env
          echo CLIENT_DOMAIN=${{ secrets.CLIENT_DOMAIN }} >> .env
          echo IMAGE_URL=${{ secrets.IMAGE_URL }} >> .env

          echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env

          echo AWS_S3_IMAGE_ACCESS_KEY_ID=${{ secrets.AWS_S3_IMAGE_ACCESS_KEY_ID }} >> .env
          echo AWS_S3_IMAGE_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_IMAGE_SECRET_ACCESS_KEY }} >> .env

          echo AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} >> .env

      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://personality-test-server-bucket/$GITHUB_SHA.zip

      - name: Code deploy
        run: >
          aws deploy create-deployment 
          --application-name personality-test-deploy-aplication
          --deployment-config-name CodeDeployDefault.OneAtATime 
          --deployment-group-name personality-test-deploy-group 
          --s3-location bucket=personality-test-server-bucket,bundleType=zip,key=$GITHUB_SHA.zip